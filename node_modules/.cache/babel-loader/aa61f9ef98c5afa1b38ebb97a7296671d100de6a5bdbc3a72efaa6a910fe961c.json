{"ast":null,"code":"var _jsxFileName = \"/Users/davidvu/Library/Mobile Documents/com~apple~CloudDocs/countries-fe/src/home-view/FilterByRegionDropdown.tsx\";\nimport React from \"react\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FilterByRegionDropdown = _ref => {\n  let {\n    regions,\n    setRegionFilter\n  } = _ref;\n  const dropdownOptions = regions.map(region => {\n    return {\n      key: region,\n      text: region,\n      value: region\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    clearable: true,\n    options: dropdownOptions,\n    placeholder: \"Filter by Region\",\n    selection: true,\n    onChange: (_, _ref2) => {\n      let {\n        value\n      } = _ref2;\n      if (typeof value === \"string\") {\n        setRegionFilter(value);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = FilterByRegionDropdown;\nvar _c;\n$RefreshReg$(_c, \"FilterByRegionDropdown\");","map":{"version":3,"names":["React","Dropdown","FilterByRegionDropdown","regions","setRegionFilter","dropdownOptions","map","region","key","text","value","_"],"sources":["/Users/davidvu/Library/Mobile Documents/com~apple~CloudDocs/countries-fe/src/home-view/FilterByRegionDropdown.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction } from \"react\";\nimport { Country } from \"../App\";\nimport { Dropdown } from \"semantic-ui-react\";\n\ninterface FilterByCountryNameInputProps {\n  regions: Array<string>;\n  setRegionFilter: Dispatch<SetStateAction<string>>;\n}\n\nexport const FilterByRegionDropdown: React.FC<\n  FilterByCountryNameInputProps\n> = ({ regions, setRegionFilter }) => {\n  const dropdownOptions = regions.map((region) => {\n    return {\n      key: region,\n      text: region,\n      value: region,\n    };\n  });\n  return (\n    <Dropdown\n      clearable\n      options={dropdownOptions}\n      placeholder=\"Filter by Region\"\n      selection\n      onChange={(_, { value }) => {\n        if (typeof value === \"string\") {\n          setRegionFilter(value);\n        }\n      }}\n    />\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAoC,OAAO;AAEvD,SAASC,QAAQ,QAAQ,mBAAmB;AAAC;AAO7C,OAAO,MAAMC,sBAEZ,GAAG,QAAkC;EAAA,IAAjC;IAAEC,OAAO;IAAEC;EAAgB,CAAC;EAC/B,MAAMC,eAAe,GAAGF,OAAO,CAACG,GAAG,CAAEC,MAAM,IAAK;IAC9C,OAAO;MACLC,GAAG,EAAED,MAAM;MACXE,IAAI,EAAEF,MAAM;MACZG,KAAK,EAAEH;IACT,CAAC;EACH,CAAC,CAAC;EACF,oBACE,QAAC,QAAQ;IACP,SAAS;IACT,OAAO,EAAEF,eAAgB;IACzB,WAAW,EAAC,kBAAkB;IAC9B,SAAS;IACT,QAAQ,EAAE,CAACM,CAAC,YAAgB;MAAA,IAAd;QAAED;MAAM,CAAC;MACrB,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC7BN,eAAe,CAACM,KAAK,CAAC;MACxB;IACF;EAAE;IAAA;IAAA;IAAA;EAAA,QACF;AAEN,CAAC;AAAC,KAvBWR,sBAEZ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}