{"ast":null,"code":"var _jsxFileName = \"/Users/davidvu/Library/Mobile Documents/com~apple~CloudDocs/countries-fe/src/home-view/FilterByRegionDropdown.tsx\";\nimport React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FilterByRegionDropdown = _ref => {\n  let {\n    regions,\n    setRegionFilter\n  } = _ref;\n  const dropdownOptions = regions.map(region => {\n    return {\n      key: region,\n      text: region,\n      value: region\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    clearable: true,\n    options: dropdownOptions,\n    selection: true,\n    onChange: (_, _ref2) => {\n      let {\n        value\n      } = _ref2;\n      if (typeof value === 'string') {\n        setRegionFilter(value);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n_c = FilterByRegionDropdown;\nvar _c;\n$RefreshReg$(_c, \"FilterByRegionDropdown\");","map":{"version":3,"names":["React","Dropdown","FilterByRegionDropdown","regions","setRegionFilter","dropdownOptions","map","region","key","text","value","_"],"sources":["/Users/davidvu/Library/Mobile Documents/com~apple~CloudDocs/countries-fe/src/home-view/FilterByRegionDropdown.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\nimport { Country } from '../App';\nimport { Dropdown } from 'semantic-ui-react'\n\ninterface FilterByCountryNameInputProps {\n    regions: Array<string>;\n    setRegionFilter: Dispatch<SetStateAction<string>>;\n}\n\nexport const FilterByRegionDropdown: React.FC<FilterByCountryNameInputProps> = ({regions, setRegionFilter}) => {\n    const dropdownOptions = regions.map((region) => {\n        return {\n            key: region,\n            text: region,\n            value: region,\n        };\n    });\n    return <Dropdown clearable options={dropdownOptions} selection onChange={(_, {value}) => {\n        if(typeof value === 'string') {\n            setRegionFilter(value);\n        }\n    }}/>\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAoC,OAAO;AAEvD,SAASC,QAAQ,QAAQ,mBAAmB;AAAA;AAO5C,OAAO,MAAMC,sBAA+D,GAAG,QAAgC;EAAA,IAA/B;IAACC,OAAO;IAAEC;EAAe,CAAC;EACtG,MAAMC,eAAe,GAAGF,OAAO,CAACG,GAAG,CAAEC,MAAM,IAAK;IAC5C,OAAO;MACHC,GAAG,EAAED,MAAM;MACXE,IAAI,EAAEF,MAAM;MACZG,KAAK,EAAEH;IACX,CAAC;EACL,CAAC,CAAC;EACF,oBAAO,QAAC,QAAQ;IAAC,SAAS;IAAC,OAAO,EAAEF,eAAgB;IAAC,SAAS;IAAC,QAAQ,EAAE,CAACM,CAAC,YAAc;MAAA,IAAZ;QAACD;MAAK,CAAC;MAChF,IAAG,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC1BN,eAAe,CAACM,KAAK,CAAC;MAC1B;IACJ;EAAE;IAAA;IAAA;IAAA;EAAA,QAAE;AACR,CAAC;AAAC,KAbWR,sBAA+D;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}